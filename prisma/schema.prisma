generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  username     String         @unique
  password     String
  type         usertype       @default(BARBER)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  RefreshToken RefreshToken[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  createdAt DateTime @default(now())
  userId    String
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Santri {
  id         String     @id @default(uuid())
  name       String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  cardNumber String     @unique @default(uuid())
  kelas      kelasValue @default(Kelas_1)
  purchase   Queue[]
}

model Cukur {
  id          String   @id @default(uuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tanggal     DateTime
  tukangCukur Int      @default(1)
  queue       Queue[]
}

model Queue {
  id            String      @id @default(uuid())
  queueNumber   Int
  ticketType    tiket       @default(REGULER)
  santriId      String
  payment       payment     @default(CASH)
  cukurId       String
  paymentStatus Int         @default(0)
  status        statusValue @default(WAITING)
  updatedAt     DateTime    @updatedAt
  createdAt     DateTime    @default(now())
  durasiCukur   String?
  failed        Int         @default(0)
  cukur         Cukur       @relation(fields: [cukurId], references: [id], onDelete: Cascade, map: "public_Queue_cukurId_fkey")
  santri        Santri      @relation(fields: [santriId], references: [id], onDelete: Cascade, map: "public_Queue_santriId_fkey")
}

enum tiket {
  REGULER
  VIP
}

enum payment {
  CASH
  SALDO
}

enum usertype {
  ADMIN
  BARBER
}

enum statusValue {
  WAITING
  PROGRESS
  FINISHED
  VIP_WAITING
}

enum kelasValue {
  Kelas_1
  Kelas_2
  Kelas_3
  Kelas_4
  Kelas_5
  Kelas_6
}
